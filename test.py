import streamlit as st

st.set_page_config(page_title="간호 진로 탐색 앱", layout="wide")

# ======================
# 데이터 준비
# ======================

# 병원 내 직무
hospital_jobs = {
    "응급실 간호사": {"설명": "응급 상황에서 환자의 생명을 지키기 위해 빠르게 대처하는 간호사.", "필요 역량": "빠른 판단력, 침착함, 체력"},
    "수술실 간호사": {"설명": "수술 과정에서 환자와 의료진을 지원하는 간호사.", "필요 역량": "세심함, 집중력, 체력"},
    "소아과 간호사": {"설명": "어린이 환자와 보호자를 돌보는 간호사.", "필요 역량": "공감 능력, 인내심, 친절함"},
    "정신건강 간호사": {"설명": "정신질환 환자와 가족을 돕는 간호사.", "필요 역량": "공감 능력, 인내심, 의사소통 능력"},
    "중환자실 간호사": {"설명": "중환자실에서 위중한 환자를 전문적으로 돌보는 간호사.", "필요 역량": "집중력, 전문성, 심리적 회복력"}
}

# 병원 외 직무
non_hospital_jobs = {
    "군 간호사": {"설명": "군 병원이나 부대에서 군인들의 건강을 돌보는 간호사.", "필요 역량": "리더십, 책임감, 조직 적응력"},
    "연구 간호사": {"설명": "임상시험과 의학 연구를 지원하는 간호사.", "필요 역량": "분석적 사고, 정확성, 문서작성 능력"},
    "학교 보건교사": {"설명": "학교에서 학생들의 건강을 관리하고 보건교육을 담당.", "필요 역량": "교육 능력, 소통 능력, 학생 지도력"},
    "보건소 간호사": {"설명": "지역 주민의 건강을 돌보고 예방접종, 보건교육 등을 담당.", "필요 역량": "소통 능력, 공공서비스 마인드, 조직력"}
}

# Q&A 데이터 (10개)
qa_list = [
    {"q": "간호학과 입시에서 중요한 요소는 무엇인가요?", "a": "내신 성적, 수능 성적, 면접, 봉사활동 경험 등이 중요합니다."},
    {"q": "간호학과에 진학하려면 수학을 잘해야 하나요?", "a": "수학보다는 생명과학, 화학 등 기초과학 과목이 더 중요합니다."},
    {"q": "간호사 국가고시는 언제 보나요?", "a": "4학년을 마친 후 매년 2월 초에 응시할 수 있습니다."},
    {"q": "간호학과 실습은 언제부터 시작하나요?", "a": "대부분의 대학에서 3학년 때부터 병원 실습을 시작합니다."},
    {"q": "간호학과 학생들의 하루 일과는 어떤가요?", "a": "수업, 실습, 과제, 조별 활동으로 바쁘게 보냅니다."},
    {"q": "졸업 후 병원 외에 어떤 진로가 있나요?", "a": "보건교사, 연구 간호사, 산업 보건 간호사, 군 간호사 등 다양합니다."},
    {"q": "간호학과에 필요한 성격이나 자질은 무엇인가요?", "a": "공감 능력, 책임감, 체력, 소통 능력이 필요합니다."},
    {"q": "해외에서 간호사로 일할 수 있나요?", "a": "추가 자격 요건을 충족하면 미국, 호주, 독일 등에서 일할 수 있습니다."},
    {"q": "간호학과에 진학하면 교환학생 기회가 있나요?", "a": "학교와 프로그램에 따라 교환학생 기회가 주어지기도 합니다."},
    {"q": "간호학과를 졸업하면 취업은 잘 되나요?", "a": "대부분 졸업 후 바로 취업 가능하지만 근무 환경이 다양합니다."}
]

# ======================
# UI 메뉴
# ======================
st.title("🏥 간호 진로 탐색 가이드")
menu = st.sidebar.radio("메뉴 선택", ["홈", "간호사 직무 탐색", "적성 테스트", "입시/진로 Q&A"])

# ======================
# 홈
# ======================
if menu == "홈":
    st.subheader("📌 앱 소개")
    st.write("이 앱은 간호학과를 지망하는 학생들을 위해 만들어졌습니다.")
    st.write("- 간호사 직무 탐색: 병원 안팎의 다양한 간호사 직무를 배워보세요.")
    st.write("- 적성 테스트: 간단한 성향 테스트로 자신에게 맞는 직무를 추천받아보세요.")
    st.write("- 입시/진로 Q&A: 간호학과 입시와 진로에 관한 질문과 답변을 확인하세요.")

# ======================
# 간호사 직무 탐색
# ======================
elif menu == "간호사 직무 탐색":
    st.subheader("💡 간호사 직무 탐색")

    st.markdown("### 🏥 병원 내 직무")
    for job, info in hospital_jobs.items():
        with st.expander(job):
            st.write(f"**설명**: {info['설명']}")
            st.write(f"**필요 역량**: {info['필요 역량']}")

    st.markdown("### 🌍 병원 외 직무")
    for job, info in non_hospital_jobs.items():
        with st.expander(job):
            st.write(f"**설명**: {info['설명']}")
            st.write(f"**필요 역량**: {info['필요 역량']}")

# ======================
# 적성 테스트
# ======================
elif menu == "적성 테스트":
    st.subheader("🧩 나에게 맞는 간호사 직무 찾기")
    st.info("아래 5개의 질문에 답하고, 당신에게 맞는 간호사 직무를 찾아보세요!")

    # 질문 데이터
    questions = [
        ("q1", "1️⃣ 어떤 상황에서 더 잘 대처하나요?",
         ["긴박한 상황에서도 침착하게 대처한다",
          "정확하고 세심하게 일하는 걸 좋아한다",
          "사람들을 잘 위로하고 공감한다"]),

        ("q2", "2️⃣ 내가 더 잘하는 것은?",
         ["빠른 판단과 실행",
          "계획대로 차근차근 진행",
          "사람의 마음을 읽고 소통"]),

        ("q3", "3️⃣ 선호하는 근무 환경은?",
         ["위급 상황이 많은 곳",
          "정해진 절차와 팀워크가 중요한 곳",
          "아이들과 함께하는 환경"]),

        ("q4", "4️⃣ 내가 더 보람을 느끼는 순간은?",
         ["응급 환자를 살렸을 때",
          "연구 성과나 결과물이 나왔을 때",
          "아이들이 건강하게 성장할 때"]),

        ("q5", "5️⃣ 나의 강점은?",
         ["체력과 끈기",
          "논리적·분석적 사고",
          "친절함과 공감 능력"])
    ]

    answers = {}
    for key, q_text, options in questions:
        with st.container():
            st.markdown(f"### ❓ {q_text}")  # 질문 강조
            answers[key] = st.radio(" ", options, key=key, index=None, label_visibility="collapsed")
            st.divider()

    if st.button("🚀 결과 확인하기"):
        if not all(answers.values()):
            st.warning("⚠️ 모든 문항에 답해주세요!")
        else:
            scores = {"응급실 간호사": 0, "군 간호사": 0, "수술실 간호사": 0,
                      "연구 간호사": 0, "소아과 간호사": 0, "학교 보건교사": 0}

            # 문항별 점수 반영
            if answers["q1"] == "긴박한 상황에서도 침착하게 대처한다":
                scores["응급실 간호사"] += 1; scores["군 간호사"] += 1
            elif answers["q1"] == "정확하고 세심하게 일하는 걸 좋아한다":
                scores["수술실 간호사"] += 1; scores["연구 간호사"] += 1
            else:
                scores["소아과 간호사"] += 1; scores["학교 보건교사"] += 1

            if answers["q2"] == "빠른 판단과 실행":
                scores["응급실 간호사"] += 1; scores["군 간호사"] += 1
            elif answers["q2"] == "계획대로 차근차근 진행":
                scores["수술실 간호사"] += 1; scores["연구 간호사"] += 1
            else:
                scores["소아과 간호사"] += 1; scores["학교 보건교사"] += 1

            if answers["q3"] == "위급 상황이 많은 곳":
                scores["응급실 간호사"] += 1; scores["군 간호사"] += 1
            elif answers["q3"] == "정해진 절차와 팀워크가 중요한 곳":
                scores["수술실 간호사"] += 1; scores["연구 간호사"] += 1
            else:
                scores["소아과 간호사"] += 1; scores["학교 보건교사"] += 1

            if answers["q4"] == "응급 환자를 살렸을 때":
                scores["응급실 간호사"] += 1; scores["군 간호사"] += 1
            elif answers["q4"] == "연구 성과나 결과물이 나왔을 때":
                scores["연구 간호사"] += 1; scores["수술실 간호사"] += 1
            else:
                scores["소아과 간호사"] += 1; scores["학교 보건교사"] += 1

            if answers["q5"] == "체력과 끈기":
                scores["응급실 간호사"] += 1; scores["군 간호사"] += 1
            elif answers["q5"] == "논리적·분석적 사고":
                scores["연구 간호사"] += 1; scores["수술실 간호사"] += 1
            else:
                scores["소아과 간호사"] += 1; scores["학교 보건교사"] += 1

            best_jobs = [j for j, s in scores.items() if s == max(scores.values())]
            st.success(f"✅ 당신에게 잘 맞는 직무는: {', '.join(best_jobs)}")

# ======================
# Q&A
# ======================
elif menu == "입시/진로 Q&A":
    st.subheader("❓ 입시/진로 Q&A 모음집")
    search = st.text_input("🔍 검색어 입력")

    if search:
        results = [qa for qa in qa_list if search.lower() in qa["q"].lower() or search.lower() in qa["a"].lower()]
    else:
        results = qa_list

    if results:
        for qa in results:
            with st.expander(f"Q. {qa['q']}"):
                st.write(f"A. {qa['a']}")
    else:
        st.warning("검색 결과가 없습니다.")
